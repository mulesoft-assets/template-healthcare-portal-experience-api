<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls" 
	xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" 
	xmlns:http="http://www.mulesoft.org/schema/mule/http" 
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd" >

	
	<api-platform-gw:api id="${api.id}" apiName="${api.name}" version="${api.version}" flowRef="experience-apiFlow" doc:name="API Autodiscovery" create="true"></api-platform-gw:api>
    
    <context:property-placeholder location="common.properties, mule.${mule.env}.properties"/>
    
    <http:listener-config name="api-listener" host="0.0.0.0" port="${https.port}" doc:name="HTTP Listener Configuration" protocol="HTTPS">
        <tls:context>
            <tls:key-store type="jks" path="${keystore.location}" alias="${key.alias}" keyPassword="${key.password}" password="${keystore.password}"/>
        </tls:context>
    </http:listener-config>
    
<!--     <api-platform-gw:api id="${api.id}" apiName="${api.name}" version="${api.version}" flowRef="api-main" doc:name="API Autodiscovery"></api-platform-gw:api> -->


    <apikit:config name="api-config" raml="web-portal-experience-api.raml" consoleEnabled="true" consolePath="console" doc:name="Router"/>
    
    <http:request-config name="appointments-process-api" host="${api.appointment.host}" port="${api.appointment.port}" basePath="${api.appointment.basepath}" doc:name="HTTP Request Configuration" >
        <http:raml-api-configuration location="ehr-appointments-process-api/appointments-process-api.raml"/>

    </http:request-config>
    <http:request-config name="ehr-system-api" host="${api.ehr.host}" port="${api.ehr.port}" basePath="${api.ehr.basepath}" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="ehr-system-api/healthcare-system-api.raml"/>
    </http:request-config>

	<http:request-config name="healthcare-onboarding-process-api"  host="${api.onboarding.host}" port="${api.onboarding.port}" basePath="${api.onboarding.basepath}" doc:name="HTTP Request Configuration" protocol="HTTPS" responseTimeout="30000">
        <tls:context>
            <tls:trust-store path="${truststore.location}" password="${truststore.password}" type="jks" insecure="true"/>
        </tls:context>
        <http:raml-api-configuration location="healthcare-onboarding-process-api/healthcare-onboarding-process-api.raml"/>


    </http:request-config>
    <http:request-config name="healthcare-identity-service-api"  host="${api.identity.host}" port="${api.identity.port}" basePath="${api.identity.basepath}" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="healthcare-identity-service-api/healthcare-identity-service-api.raml"/>


    </http:request-config>

    
    <flow name="experience-apiFlow">
        <http:listener config-ref="api-listener" path="/api/*" doc:name="HTTP"/>
        <logger message="#[message.inboundProperties.'http.method'] #[message.inboundProperties.'http.request.uri' + message.inboundProperties.'http.query.string'] #[&quot;\n&quot; + message.payloadAs(java.lang.String)]" level="INFO" doc:name="Log request"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    
    
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
    
        <apikit:mapping statusCode="401">
            <apikit:exception value="org.mule.api.security.UnauthorisedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unauthorized&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot;,&quot;service&quot; : &quot;clinicalData&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot;,&quot;service&quot; : &quot;clinicalData&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="500">
            <apikit:exception value="java.lang.Exception"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{&quot;message&quot; : &quot;Internal Server Error&quot;,&quot;service&quot; : &quot;clinicalData&quot;, &quot;reason&quot; : &quot;#[exception.getSummaryMessage()]&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
   


</mule>
